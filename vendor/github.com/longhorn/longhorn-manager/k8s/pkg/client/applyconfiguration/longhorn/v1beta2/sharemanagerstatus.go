/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

import (
	longhornv1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
)

// ShareManagerStatusApplyConfiguration represents a declarative configuration of the ShareManagerStatus type for use
// with apply.
type ShareManagerStatusApplyConfiguration struct {
	OwnerID  *string                            `json:"ownerID,omitempty"`
	State    *longhornv1beta2.ShareManagerState `json:"state,omitempty"`
	Endpoint *string                            `json:"endpoint,omitempty"`
}

// ShareManagerStatusApplyConfiguration constructs a declarative configuration of the ShareManagerStatus type for use with
// apply.
func ShareManagerStatus() *ShareManagerStatusApplyConfiguration {
	return &ShareManagerStatusApplyConfiguration{}
}

// WithOwnerID sets the OwnerID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OwnerID field is set to the value of the last call.
func (b *ShareManagerStatusApplyConfiguration) WithOwnerID(value string) *ShareManagerStatusApplyConfiguration {
	b.OwnerID = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *ShareManagerStatusApplyConfiguration) WithState(value longhornv1beta2.ShareManagerState) *ShareManagerStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithEndpoint sets the Endpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Endpoint field is set to the value of the last call.
func (b *ShareManagerStatusApplyConfiguration) WithEndpoint(value string) *ShareManagerStatusApplyConfiguration {
	b.Endpoint = &value
	return b
}
