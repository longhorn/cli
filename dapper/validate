#!/bin/bash
set -e

cd "$(dirname "$0")"/..

echo Running validation

PACKAGES="$(go list ./...)"

echo Running: go vet
# shellcheck disable=SC2086
go vet ${PACKAGES}

if [ ! -z "${DRONE_REPO}" ] && [ ! -z "${DRONE_PULL_REQUEST}" ]; then
	curl -sSfLO https://github.com/"$DRONE_REPO"/pull/"$DRONE_PULL_REQUEST".patch
	echo "Running: golangci-lint run --new-from-patch=${DRONE_PULL_REQUEST}.patch"
	golangci-lint run --new-from-patch="${DRONE_PULL_REQUEST}.patch"
	rm "${DRONE_PULL_REQUEST}.patch"
elif [ -n "${DRONE_COMMIT_REF}" ]; then
	echo "Running: golangci-lint run --new-from-rev=${DRONE_COMMIT_REF}"
	golangci-lint run --new-from-rev="${DRONE_COMMIT_REF}"
else
	git symbolic-ref -q HEAD && REV="origin/HEAD" || REV="HEAD^"
	headSHA=$(git rev-parse --short=12 ${REV})
	echo "Running: golangci-lint run --new-from-rev=${headSHA}"
	golangci-lint run --new-from-rev="${headSHA}"
fi


echo Running: go fmt
test -z "$(go fmt ${PACKAGES} | tee /dev/stderr)"
