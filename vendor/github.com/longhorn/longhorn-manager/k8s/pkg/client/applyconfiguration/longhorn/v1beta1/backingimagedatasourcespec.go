/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	longhornv1beta1 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta1"
)

// BackingImageDataSourceSpecApplyConfiguration represents a declarative configuration of the BackingImageDataSourceSpec type for use
// with apply.
type BackingImageDataSourceSpecApplyConfiguration struct {
	NodeID          *string                                     `json:"nodeID,omitempty"`
	DiskUUID        *string                                     `json:"diskUUID,omitempty"`
	DiskPath        *string                                     `json:"diskPath,omitempty"`
	Checksum        *string                                     `json:"checksum,omitempty"`
	SourceType      *longhornv1beta1.BackingImageDataSourceType `json:"sourceType,omitempty"`
	Parameters      map[string]string                           `json:"parameters,omitempty"`
	FileTransferred *bool                                       `json:"fileTransferred,omitempty"`
}

// BackingImageDataSourceSpecApplyConfiguration constructs a declarative configuration of the BackingImageDataSourceSpec type for use with
// apply.
func BackingImageDataSourceSpec() *BackingImageDataSourceSpecApplyConfiguration {
	return &BackingImageDataSourceSpecApplyConfiguration{}
}

// WithNodeID sets the NodeID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeID field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithNodeID(value string) *BackingImageDataSourceSpecApplyConfiguration {
	b.NodeID = &value
	return b
}

// WithDiskUUID sets the DiskUUID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DiskUUID field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithDiskUUID(value string) *BackingImageDataSourceSpecApplyConfiguration {
	b.DiskUUID = &value
	return b
}

// WithDiskPath sets the DiskPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DiskPath field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithDiskPath(value string) *BackingImageDataSourceSpecApplyConfiguration {
	b.DiskPath = &value
	return b
}

// WithChecksum sets the Checksum field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Checksum field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithChecksum(value string) *BackingImageDataSourceSpecApplyConfiguration {
	b.Checksum = &value
	return b
}

// WithSourceType sets the SourceType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceType field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithSourceType(value longhornv1beta1.BackingImageDataSourceType) *BackingImageDataSourceSpecApplyConfiguration {
	b.SourceType = &value
	return b
}

// WithParameters puts the entries into the Parameters field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Parameters field,
// overwriting an existing map entries in Parameters field with the same key.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithParameters(entries map[string]string) *BackingImageDataSourceSpecApplyConfiguration {
	if b.Parameters == nil && len(entries) > 0 {
		b.Parameters = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Parameters[k] = v
	}
	return b
}

// WithFileTransferred sets the FileTransferred field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FileTransferred field is set to the value of the last call.
func (b *BackingImageDataSourceSpecApplyConfiguration) WithFileTransferred(value bool) *BackingImageDataSourceSpecApplyConfiguration {
	b.FileTransferred = &value
	return b
}
