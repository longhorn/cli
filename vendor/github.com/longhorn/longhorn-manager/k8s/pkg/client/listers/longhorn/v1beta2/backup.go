/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	longhornv1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// BackupLister helps list Backups.
// All objects returned here must be treated as read-only.
type BackupLister interface {
	// List lists all Backups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Backup, err error)
	// Backups returns an object that can list and get Backups.
	Backups(namespace string) BackupNamespaceLister
	BackupListerExpansion
}

// backupLister implements the BackupLister interface.
type backupLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Backup]
}

// NewBackupLister returns a new BackupLister.
func NewBackupLister(indexer cache.Indexer) BackupLister {
	return &backupLister{listers.New[*longhornv1beta2.Backup](indexer, longhornv1beta2.Resource("backup"))}
}

// Backups returns an object that can list and get Backups.
func (s *backupLister) Backups(namespace string) BackupNamespaceLister {
	return backupNamespaceLister{listers.NewNamespaced[*longhornv1beta2.Backup](s.ResourceIndexer, namespace)}
}

// BackupNamespaceLister helps list and get Backups.
// All objects returned here must be treated as read-only.
type BackupNamespaceLister interface {
	// List lists all Backups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Backup, err error)
	// Get retrieves the Backup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*longhornv1beta2.Backup, error)
	BackupNamespaceListerExpansion
}

// backupNamespaceLister implements the BackupNamespaceLister
// interface.
type backupNamespaceLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Backup]
}
