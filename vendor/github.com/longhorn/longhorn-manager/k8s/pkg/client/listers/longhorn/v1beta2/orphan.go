/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	longhornv1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// OrphanLister helps list Orphans.
// All objects returned here must be treated as read-only.
type OrphanLister interface {
	// List lists all Orphans in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Orphan, err error)
	// Orphans returns an object that can list and get Orphans.
	Orphans(namespace string) OrphanNamespaceLister
	OrphanListerExpansion
}

// orphanLister implements the OrphanLister interface.
type orphanLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Orphan]
}

// NewOrphanLister returns a new OrphanLister.
func NewOrphanLister(indexer cache.Indexer) OrphanLister {
	return &orphanLister{listers.New[*longhornv1beta2.Orphan](indexer, longhornv1beta2.Resource("orphan"))}
}

// Orphans returns an object that can list and get Orphans.
func (s *orphanLister) Orphans(namespace string) OrphanNamespaceLister {
	return orphanNamespaceLister{listers.NewNamespaced[*longhornv1beta2.Orphan](s.ResourceIndexer, namespace)}
}

// OrphanNamespaceLister helps list and get Orphans.
// All objects returned here must be treated as read-only.
type OrphanNamespaceLister interface {
	// List lists all Orphans in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Orphan, err error)
	// Get retrieves the Orphan from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*longhornv1beta2.Orphan, error)
	OrphanNamespaceListerExpansion
}

// orphanNamespaceLister implements the OrphanNamespaceLister
// interface.
type orphanNamespaceLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Orphan]
}
