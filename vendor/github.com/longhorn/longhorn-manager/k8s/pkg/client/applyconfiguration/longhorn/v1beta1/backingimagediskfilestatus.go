/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	longhornv1beta1 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta1"
)

// BackingImageDiskFileStatusApplyConfiguration represents a declarative configuration of the BackingImageDiskFileStatus type for use
// with apply.
type BackingImageDiskFileStatusApplyConfiguration struct {
	State                   *longhornv1beta1.BackingImageState `json:"state,omitempty"`
	Progress                *int                               `json:"progress,omitempty"`
	Message                 *string                            `json:"message,omitempty"`
	LastStateTransitionTime *string                            `json:"lastStateTransitionTime,omitempty"`
}

// BackingImageDiskFileStatusApplyConfiguration constructs a declarative configuration of the BackingImageDiskFileStatus type for use with
// apply.
func BackingImageDiskFileStatus() *BackingImageDiskFileStatusApplyConfiguration {
	return &BackingImageDiskFileStatusApplyConfiguration{}
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *BackingImageDiskFileStatusApplyConfiguration) WithState(value longhornv1beta1.BackingImageState) *BackingImageDiskFileStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithProgress sets the Progress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Progress field is set to the value of the last call.
func (b *BackingImageDiskFileStatusApplyConfiguration) WithProgress(value int) *BackingImageDiskFileStatusApplyConfiguration {
	b.Progress = &value
	return b
}

// WithMessage sets the Message field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Message field is set to the value of the last call.
func (b *BackingImageDiskFileStatusApplyConfiguration) WithMessage(value string) *BackingImageDiskFileStatusApplyConfiguration {
	b.Message = &value
	return b
}

// WithLastStateTransitionTime sets the LastStateTransitionTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastStateTransitionTime field is set to the value of the last call.
func (b *BackingImageDiskFileStatusApplyConfiguration) WithLastStateTransitionTime(value string) *BackingImageDiskFileStatusApplyConfiguration {
	b.LastStateTransitionTime = &value
	return b
}
