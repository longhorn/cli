/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// SnapshotStatusApplyConfiguration represents a declarative configuration of the SnapshotStatus type for use
// with apply.
type SnapshotStatusApplyConfiguration struct {
	Parent       *string           `json:"parent,omitempty"`
	Children     map[string]bool   `json:"children,omitempty"`
	MarkRemoved  *bool             `json:"markRemoved,omitempty"`
	UserCreated  *bool             `json:"userCreated,omitempty"`
	CreationTime *string           `json:"creationTime,omitempty"`
	Size         *int64            `json:"size,omitempty"`
	Labels       map[string]string `json:"labels,omitempty"`
	OwnerID      *string           `json:"ownerID,omitempty"`
	Error        *string           `json:"error,omitempty"`
	RestoreSize  *int64            `json:"restoreSize,omitempty"`
	ReadyToUse   *bool             `json:"readyToUse,omitempty"`
	Checksum     *string           `json:"checksum,omitempty"`
}

// SnapshotStatusApplyConfiguration constructs a declarative configuration of the SnapshotStatus type for use with
// apply.
func SnapshotStatus() *SnapshotStatusApplyConfiguration {
	return &SnapshotStatusApplyConfiguration{}
}

// WithParent sets the Parent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Parent field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithParent(value string) *SnapshotStatusApplyConfiguration {
	b.Parent = &value
	return b
}

// WithChildren puts the entries into the Children field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Children field,
// overwriting an existing map entries in Children field with the same key.
func (b *SnapshotStatusApplyConfiguration) WithChildren(entries map[string]bool) *SnapshotStatusApplyConfiguration {
	if b.Children == nil && len(entries) > 0 {
		b.Children = make(map[string]bool, len(entries))
	}
	for k, v := range entries {
		b.Children[k] = v
	}
	return b
}

// WithMarkRemoved sets the MarkRemoved field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MarkRemoved field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithMarkRemoved(value bool) *SnapshotStatusApplyConfiguration {
	b.MarkRemoved = &value
	return b
}

// WithUserCreated sets the UserCreated field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserCreated field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithUserCreated(value bool) *SnapshotStatusApplyConfiguration {
	b.UserCreated = &value
	return b
}

// WithCreationTime sets the CreationTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreationTime field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithCreationTime(value string) *SnapshotStatusApplyConfiguration {
	b.CreationTime = &value
	return b
}

// WithSize sets the Size field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithSize(value int64) *SnapshotStatusApplyConfiguration {
	b.Size = &value
	return b
}

// WithLabels puts the entries into the Labels field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Labels field,
// overwriting an existing map entries in Labels field with the same key.
func (b *SnapshotStatusApplyConfiguration) WithLabels(entries map[string]string) *SnapshotStatusApplyConfiguration {
	if b.Labels == nil && len(entries) > 0 {
		b.Labels = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Labels[k] = v
	}
	return b
}

// WithOwnerID sets the OwnerID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OwnerID field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithOwnerID(value string) *SnapshotStatusApplyConfiguration {
	b.OwnerID = &value
	return b
}

// WithError sets the Error field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Error field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithError(value string) *SnapshotStatusApplyConfiguration {
	b.Error = &value
	return b
}

// WithRestoreSize sets the RestoreSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RestoreSize field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithRestoreSize(value int64) *SnapshotStatusApplyConfiguration {
	b.RestoreSize = &value
	return b
}

// WithReadyToUse sets the ReadyToUse field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyToUse field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithReadyToUse(value bool) *SnapshotStatusApplyConfiguration {
	b.ReadyToUse = &value
	return b
}

// WithChecksum sets the Checksum field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Checksum field is set to the value of the last call.
func (b *SnapshotStatusApplyConfiguration) WithChecksum(value string) *SnapshotStatusApplyConfiguration {
	b.Checksum = &value
	return b
}
