/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	longhornv1beta1 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta1"
)

// BackingImageSpecApplyConfiguration represents a declarative configuration of the BackingImageSpec type for use
// with apply.
type BackingImageSpecApplyConfiguration struct {
	Disks            map[string]struct{}                         `json:"disks,omitempty"`
	Checksum         *string                                     `json:"checksum,omitempty"`
	SourceType       *longhornv1beta1.BackingImageDataSourceType `json:"sourceType,omitempty"`
	SourceParameters map[string]string                           `json:"sourceParameters,omitempty"`
	ImageURL         *string                                     `json:"imageURL,omitempty"`
}

// BackingImageSpecApplyConfiguration constructs a declarative configuration of the BackingImageSpec type for use with
// apply.
func BackingImageSpec() *BackingImageSpecApplyConfiguration {
	return &BackingImageSpecApplyConfiguration{}
}

// WithDisks puts the entries into the Disks field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Disks field,
// overwriting an existing map entries in Disks field with the same key.
func (b *BackingImageSpecApplyConfiguration) WithDisks(entries map[string]struct{}) *BackingImageSpecApplyConfiguration {
	if b.Disks == nil && len(entries) > 0 {
		b.Disks = make(map[string]struct{}, len(entries))
	}
	for k, v := range entries {
		b.Disks[k] = v
	}
	return b
}

// WithChecksum sets the Checksum field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Checksum field is set to the value of the last call.
func (b *BackingImageSpecApplyConfiguration) WithChecksum(value string) *BackingImageSpecApplyConfiguration {
	b.Checksum = &value
	return b
}

// WithSourceType sets the SourceType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SourceType field is set to the value of the last call.
func (b *BackingImageSpecApplyConfiguration) WithSourceType(value longhornv1beta1.BackingImageDataSourceType) *BackingImageSpecApplyConfiguration {
	b.SourceType = &value
	return b
}

// WithSourceParameters puts the entries into the SourceParameters field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the SourceParameters field,
// overwriting an existing map entries in SourceParameters field with the same key.
func (b *BackingImageSpecApplyConfiguration) WithSourceParameters(entries map[string]string) *BackingImageSpecApplyConfiguration {
	if b.SourceParameters == nil && len(entries) > 0 {
		b.SourceParameters = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.SourceParameters[k] = v
	}
	return b
}

// WithImageURL sets the ImageURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageURL field is set to the value of the last call.
func (b *BackingImageSpecApplyConfiguration) WithImageURL(value string) *BackingImageSpecApplyConfiguration {
	b.ImageURL = &value
	return b
}
