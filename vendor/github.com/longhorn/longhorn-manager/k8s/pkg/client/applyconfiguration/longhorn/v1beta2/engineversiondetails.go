/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// EngineVersionDetailsApplyConfiguration represents a declarative configuration of the EngineVersionDetails type for use
// with apply.
type EngineVersionDetailsApplyConfiguration struct {
	Version                 *string `json:"version,omitempty"`
	GitCommit               *string `json:"gitCommit,omitempty"`
	BuildDate               *string `json:"buildDate,omitempty"`
	CLIAPIVersion           *int    `json:"cliAPIVersion,omitempty"`
	CLIAPIMinVersion        *int    `json:"cliAPIMinVersion,omitempty"`
	ControllerAPIVersion    *int    `json:"controllerAPIVersion,omitempty"`
	ControllerAPIMinVersion *int    `json:"controllerAPIMinVersion,omitempty"`
	DataFormatVersion       *int    `json:"dataFormatVersion,omitempty"`
	DataFormatMinVersion    *int    `json:"dataFormatMinVersion,omitempty"`
}

// EngineVersionDetailsApplyConfiguration constructs a declarative configuration of the EngineVersionDetails type for use with
// apply.
func EngineVersionDetails() *EngineVersionDetailsApplyConfiguration {
	return &EngineVersionDetailsApplyConfiguration{}
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithVersion(value string) *EngineVersionDetailsApplyConfiguration {
	b.Version = &value
	return b
}

// WithGitCommit sets the GitCommit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitCommit field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithGitCommit(value string) *EngineVersionDetailsApplyConfiguration {
	b.GitCommit = &value
	return b
}

// WithBuildDate sets the BuildDate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BuildDate field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithBuildDate(value string) *EngineVersionDetailsApplyConfiguration {
	b.BuildDate = &value
	return b
}

// WithCLIAPIVersion sets the CLIAPIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CLIAPIVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithCLIAPIVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.CLIAPIVersion = &value
	return b
}

// WithCLIAPIMinVersion sets the CLIAPIMinVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CLIAPIMinVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithCLIAPIMinVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.CLIAPIMinVersion = &value
	return b
}

// WithControllerAPIVersion sets the ControllerAPIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ControllerAPIVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithControllerAPIVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.ControllerAPIVersion = &value
	return b
}

// WithControllerAPIMinVersion sets the ControllerAPIMinVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ControllerAPIMinVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithControllerAPIMinVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.ControllerAPIMinVersion = &value
	return b
}

// WithDataFormatVersion sets the DataFormatVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DataFormatVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithDataFormatVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.DataFormatVersion = &value
	return b
}

// WithDataFormatMinVersion sets the DataFormatMinVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DataFormatMinVersion field is set to the value of the last call.
func (b *EngineVersionDetailsApplyConfiguration) WithDataFormatMinVersion(value int) *EngineVersionDetailsApplyConfiguration {
	b.DataFormatMinVersion = &value
	return b
}
