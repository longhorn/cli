/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

// RestoreStatusApplyConfiguration represents a declarative configuration of the RestoreStatus type for use
// with apply.
type RestoreStatusApplyConfiguration struct {
	IsRestoring            *bool   `json:"isRestoring,omitempty"`
	LastRestored           *string `json:"lastRestored,omitempty"`
	CurrentRestoringBackup *string `json:"currentRestoringBackup,omitempty"`
	Progress               *int    `json:"progress,omitempty"`
	Error                  *string `json:"error,omitempty"`
	Filename               *string `json:"filename,omitempty"`
	State                  *string `json:"state,omitempty"`
	BackupURL              *string `json:"backupURL,omitempty"`
}

// RestoreStatusApplyConfiguration constructs a declarative configuration of the RestoreStatus type for use with
// apply.
func RestoreStatus() *RestoreStatusApplyConfiguration {
	return &RestoreStatusApplyConfiguration{}
}

// WithIsRestoring sets the IsRestoring field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IsRestoring field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithIsRestoring(value bool) *RestoreStatusApplyConfiguration {
	b.IsRestoring = &value
	return b
}

// WithLastRestored sets the LastRestored field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastRestored field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithLastRestored(value string) *RestoreStatusApplyConfiguration {
	b.LastRestored = &value
	return b
}

// WithCurrentRestoringBackup sets the CurrentRestoringBackup field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentRestoringBackup field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithCurrentRestoringBackup(value string) *RestoreStatusApplyConfiguration {
	b.CurrentRestoringBackup = &value
	return b
}

// WithProgress sets the Progress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Progress field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithProgress(value int) *RestoreStatusApplyConfiguration {
	b.Progress = &value
	return b
}

// WithError sets the Error field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Error field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithError(value string) *RestoreStatusApplyConfiguration {
	b.Error = &value
	return b
}

// WithFilename sets the Filename field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Filename field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithFilename(value string) *RestoreStatusApplyConfiguration {
	b.Filename = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithState(value string) *RestoreStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithBackupURL sets the BackupURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackupURL field is set to the value of the last call.
func (b *RestoreStatusApplyConfiguration) WithBackupURL(value string) *RestoreStatusApplyConfiguration {
	b.BackupURL = &value
	return b
}
