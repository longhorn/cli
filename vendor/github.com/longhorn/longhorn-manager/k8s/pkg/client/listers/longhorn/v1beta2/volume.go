/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	longhornv1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// VolumeLister helps list Volumes.
// All objects returned here must be treated as read-only.
type VolumeLister interface {
	// List lists all Volumes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Volume, err error)
	// Volumes returns an object that can list and get Volumes.
	Volumes(namespace string) VolumeNamespaceLister
	VolumeListerExpansion
}

// volumeLister implements the VolumeLister interface.
type volumeLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Volume]
}

// NewVolumeLister returns a new VolumeLister.
func NewVolumeLister(indexer cache.Indexer) VolumeLister {
	return &volumeLister{listers.New[*longhornv1beta2.Volume](indexer, longhornv1beta2.Resource("volume"))}
}

// Volumes returns an object that can list and get Volumes.
func (s *volumeLister) Volumes(namespace string) VolumeNamespaceLister {
	return volumeNamespaceLister{listers.NewNamespaced[*longhornv1beta2.Volume](s.ResourceIndexer, namespace)}
}

// VolumeNamespaceLister helps list and get Volumes.
// All objects returned here must be treated as read-only.
type VolumeNamespaceLister interface {
	// List lists all Volumes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*longhornv1beta2.Volume, err error)
	// Get retrieves the Volume from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*longhornv1beta2.Volume, error)
	VolumeNamespaceListerExpansion
}

// volumeNamespaceLister implements the VolumeNamespaceLister
// interface.
type volumeNamespaceLister struct {
	listers.ResourceIndexer[*longhornv1beta2.Volume]
}
