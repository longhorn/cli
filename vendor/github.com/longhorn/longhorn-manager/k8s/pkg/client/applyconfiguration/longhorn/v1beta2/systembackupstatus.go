/*
Copyright The Longhorn Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta2

import (
	longhornv1beta2 "github.com/longhorn/longhorn-manager/k8s/pkg/apis/longhorn/v1beta2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// SystemBackupStatusApplyConfiguration represents a declarative configuration of the SystemBackupStatus type for use
// with apply.
type SystemBackupStatusApplyConfiguration struct {
	OwnerID      *string                            `json:"ownerID,omitempty"`
	Version      *string                            `json:"version,omitempty"`
	GitCommit    *string                            `json:"gitCommit,omitempty"`
	ManagerImage *string                            `json:"managerImage,omitempty"`
	State        *longhornv1beta2.SystemBackupState `json:"state,omitempty"`
	Conditions   []ConditionApplyConfiguration      `json:"conditions,omitempty"`
	CreatedAt    *v1.Time                           `json:"createdAt,omitempty"`
	LastSyncedAt *v1.Time                           `json:"lastSyncedAt,omitempty"`
}

// SystemBackupStatusApplyConfiguration constructs a declarative configuration of the SystemBackupStatus type for use with
// apply.
func SystemBackupStatus() *SystemBackupStatusApplyConfiguration {
	return &SystemBackupStatusApplyConfiguration{}
}

// WithOwnerID sets the OwnerID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OwnerID field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithOwnerID(value string) *SystemBackupStatusApplyConfiguration {
	b.OwnerID = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithVersion(value string) *SystemBackupStatusApplyConfiguration {
	b.Version = &value
	return b
}

// WithGitCommit sets the GitCommit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GitCommit field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithGitCommit(value string) *SystemBackupStatusApplyConfiguration {
	b.GitCommit = &value
	return b
}

// WithManagerImage sets the ManagerImage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ManagerImage field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithManagerImage(value string) *SystemBackupStatusApplyConfiguration {
	b.ManagerImage = &value
	return b
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithState(value longhornv1beta2.SystemBackupState) *SystemBackupStatusApplyConfiguration {
	b.State = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *SystemBackupStatusApplyConfiguration) WithConditions(values ...*ConditionApplyConfiguration) *SystemBackupStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithCreatedAt sets the CreatedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CreatedAt field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithCreatedAt(value v1.Time) *SystemBackupStatusApplyConfiguration {
	b.CreatedAt = &value
	return b
}

// WithLastSyncedAt sets the LastSyncedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastSyncedAt field is set to the value of the last call.
func (b *SystemBackupStatusApplyConfiguration) WithLastSyncedAt(value v1.Time) *SystemBackupStatusApplyConfiguration {
	b.LastSyncedAt = &value
	return b
}
